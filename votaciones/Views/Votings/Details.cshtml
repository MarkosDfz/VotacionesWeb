@model votaciones.Models.DetailsVotingView

@{
    ViewBag.Title = "Detalles de la Votación";
}


<div>
    <h2>Detalle de la Votación</h2>

    <div class="text-danger">
        @TempData["Errors"]
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.State.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Remarks)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Remarks)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateTimeStart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateTimeStart)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateTimeEnd)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateTimeEnd)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsForAllUsers)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsForAllUsers)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.QuantityVotes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.QuantityVotes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CandidateWinId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Nombre.FullName)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Editar", "Edit", new { id = Model.VotingId }, new { @class = "btn btn-primary" })
    @if (Model.State.Description != "Cerrada")
    {
        if (!Model.IsForAllUsers)
        {
            @Html.ActionLink("Añadir Grupo", "AddGroup", new { id = Model.VotingId }, new { @class = "btn btn-warning" })
        }
    }
    @if (Model.State.Description != "Cerrada")
    {
        @Html.ActionLink("Añadir Candidato", "AddCandidate", new { id = Model.VotingId }, new { @class = "btn btn-info" })
    }

    @Html.ActionLink("Volver", "Index", new { }, new { @class = "btn btn-success" })
</p>

<div class="row">
    <div class="col-md-4">
        <section id="groups">
            <h4>Grupos</h4>
            @if (Model.VotingGroups.Count > 0)
            {
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.VotingGroups[0].Group.Description)
                        </th>
                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.VotingGroups.Count; i++)
                    {
                        <tr>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => modelItem.VotingGroups[i].Group.Description)
                            </td>
                            <td style="vertical-align:middle">
                                @if (Model.State.Description != "Cerrada")
                                {
                                    <input type="button" class="btn btn-danger" value="Eliminar" onclick="grupo(@Model.VotingGroups[i].VotingGroupId,'@Model.VotingGroups[i].Group.Description')" />
                                }
                            </td>
                        </tr>
                    }

                </table>
            }
            else
            {
                <h5>No existen grupos actualmente</h5>
            }
        </section>
    </div>
    <div class="col-md-8">
        <section id="candidates">
            <h4>Candidatos</h4>
            @if (Model.Candidates.Count > 0)
            {
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.Group)
                        </th>
                        <th style="padding-left: 20px;">
                            @Html.DisplayNameFor(model => Model.Candidates[0].User.Photo)
                        </th>
                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.Candidates.Count; i++)
                    {
                        <tr>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => Model.Candidates[i].User.FullName)
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => Model.Candidates[i].User.Group)
                            </td>
                            <td style="vertical-align:middle">
                                @if (!string.IsNullOrEmpty(Model.Candidates[i].User.Photo))
                                {
                                    <img src="@Url.Content(Model.Candidates[i].User.Photo)" alt="Image" style="width:60px;height:60px;max-width:100%;border-radius:50%;" />
                                }
                            </td>
                            <td style="vertical-align:middle">
                                @if (Model.State.Description != "Cerrada")
                                {
                                    <input type="button" class="btn btn-danger" value="Eliminar" onclick="candidado(@Model.Candidates[i].CandidateId,'@Model.Candidates[i].User.FullName')" />
                                }
                            </td>
                        </tr>
                    }

                </table>
            }
            else
            {
                <h5>No existen candidatos actualmente</h5>
            }
        </section>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.4/jquery-confirm.min.css">
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://kit.fontawesome.com/bf44875ae6.js" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.4/jquery-confirm.min.js"></script>

    <script>
        function grupo(id,n) {
            $.confirm({
                title: 'Eliminar Grupo',
                icon: 'fas fa-times-circle',
                type: 'red',
                closeIcon: true,
                draggable: false,
                animation: 'scale',
                theme: 'modern',
                content: '¿Está seguro de eliminar el grupo<b> ' + n + '</b> de la votación?',
                buttons: {
                    Eliminar: {
                        btnClass: 'btn-red',
                        action: function () {
                            location.href = '@Url.Action("DeleteGroup", "Votings", new {id = "ID"})'.replace("ID", parseInt(id));

                        }
                    },
                    Cancelar: {
                        btnClass: 'btn-blue',

                    }
                }
            });
        }

        function candidado(id,n) {
            $.confirm({
                title: 'Eliminar Candidato',
                icon: 'fas fa-times-circle',
                type: 'red',
                closeIcon: true,
                draggable: false,
                animation: 'scale',
                theme: 'modern',
                content: '¿Está seguro de eliminar a<b> ' + n + '</b> de la votación?',
                buttons: {
                    Eliminar: {
                        btnClass: 'btn-red',
                        action: function () {
                            location.href = '@Url.Action("DeleteCandidate", "Votings", new {id = "ID"})'.replace("ID", parseInt(id));

                        }
                    },
                    Cancelar: {
                        btnClass: 'btn-blue',

                    }
                }
            });
        }
    </script>
}